---

networks:
  revproxy:
    external: true

volumes:
  cache: null

services:

  homepage:
    image: ghcr.io/gethomepage/homepage
    container_name: homepage
    # ports:
    #   - 3000:3000
    volumes:
      - ./homepage:/app/config
      - ${WD8TB}:/wd8tb
      - ${SSD}:/ssd
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    environment:
      HOMEPAGE_ALLOWED_HOSTS: home.${DOMAIN}
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.rule=Host(`home.${DOMAIN}`)
      - traefik.http.routers.homepage.tls=true
      - traefik.http.routers.homepage.service=homepage
      - traefik.http.services.homepage.loadbalancer.server.port=3000  
      - glance.name=Homepage
      - glance.url=https://home.${DOMAIN}
      - glance.icon=di:homepage
      - glance.description=A page for self-hosted and other services

  glance:
    container_name: glance
    image: glanceapp/glance
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    volumes:
      - ./glance/config:/app/config
      - ./glance/assets:/app/assets
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # ports:
    #   - 8080:8080
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.glance.entrypoints=websecure
      - traefik.http.routers.glance.rule=Host(`glance.${DOMAIN}`)
      - traefik.http.routers.glance.tls=true
      - traefik.http.routers.glance.service=glance
      - traefik.http.services.glance.loadbalancer.server.port=8080  
      - glance.hide=true
      - glance.name=Glance
      - glance.url=https://glance.${DOMAIN}
      - glance.icon=di:glance
      - glance.description=Dashboard

  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=22
      - MALLOC_TRIM_THRESHOLD_=100000
      # - NVIDIA_VISIBLE_DEVICES=all
      # - JELLYFIN_PublishedServerUrl=jf.${DOMAIN} #optional
    # network_mode: host
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    volumes:
      - ./jellyfin:/config
      - ./jellyfin/cache:/cache
      - cache:/transcode
      - ${HOMEDIR}:/homedir
      - ${WD8TB}:/shares
      - ${SSD}:/ssd
    devices:
      - /dev/dri:/dev/dri #optional
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.rule=Host(`jf.${DOMAIN}`)
      - traefik.http.routers.jellyfin.tls=true
      - traefik.http.routers.jellyfin.service=jellyfin
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - glance.name=Jellyfin
      - glance.url=https://jf.${DOMAIN}
      - glance.icon=di:jellyfin
      - glance.description=Media Server

  fladder:
    image: ghcr.io/donutware/fladder
    container_name: fladder
    environment:
      - BASE_URL=https://jf.h.morehush.com
    # ports:
    #   - 80:80
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.fladder.entrypoints=websecure
      - traefik.http.routers.fladder.rule=Host(`fladder.${DOMAIN}`)
      - traefik.http.routers.fladder.tls=true
      - traefik.http.routers.fladder.service=fladder
      - traefik.http.services.fladder.loadbalancer.server.port=80
      - glance.name=Fladder
      - glance.url=https://fladder.${DOMAIN}
      - glance.icon=di:fladder
      - glance.description=Alternative UI for Jellyfin

  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    # ports:
    #   - 9696:9696
    volumes:
      - ./prowlarr:/config
      - ./downloads:/downloads
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.service=prowlarr
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - glance.name=Prowlarr
      - glance.url=https://prowlarr.${DOMAIN}
      - glance.icon=di:prowlarr
      - glance.description=ARR config

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd
    container_name: sab
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    # ports:
    #   - 8181:8080 # port mapping
    volumes:
      - ./sabnzbd/config:/config # sab config directory
      - ./downloads:/downloads # completed directory for downloads. this contains the category directories
      - ./downloads/incomplete:/incomplete-downloads # temp directory for downloads
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.sabnzbd.entrypoints=websecure
      - traefik.http.routers.sabnzbd.rule=Host(`sab.${DOMAIN}`)
      - traefik.http.routers.sabnzbd.tls=true
      - traefik.http.routers.sabnzbd.service=sabnzbd
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
      - glance.name=Sabnzbd
      - glance.url=https://sab.${DOMAIN}
      - glance.icon=di:sabnzbd
      - glance.description=Usenet Downloader

  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=22
    # ports:
    #   - 8989:8989 # port mapping
    volumes:
      - ./sonarr:/config # sonarr config dir
      - ./downloads:/downloads # your completed downloads directory from sab
      - ${WD8TB}:/shares
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - glance.name=Sonarr
      - glance.url=https://sonarr.${DOMAIN}/wanted/missing
      - glance.icon=di:sonarr
      - glance.description=TV Shows

  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=22
    # ports:
    #   - 7878:7878 # port mapping
    volumes:
      - ./radarr:/config # config directory for radarr
      - ./downloads:/downloads # completed downloads directory from sab
      - ${WD8TB}:/shares
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - glance.name=Radarr
      - glance.url=https://radarr.${DOMAIN}/calendar
      - glance.icon=di:radarr
      - glance.description=Movies

  profilarr:
    image: santiagosayshey/profilarr
    container_name: profilarr
    environment:
      - TZ=${TZ}
    # ports:
    #   - 6868:6868
    volumes:
      - ./profilarr:/config
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.profilarr.entrypoints=websecure
      - traefik.http.routers.profilarr.rule=Host(`profilarr.${DOMAIN}`)
      - traefik.http.routers.profilarr.tls=true
      - traefik.http.routers.profilarr.service=profilarr
      - traefik.http.services.profilarr.loadbalancer.server.port=6868
      - glance.name=Profilarr
      - glance.url=https://profilarr.${DOMAIN}
      - glance.icon=di:profilarr
      - glance.description=Quality Profile sync

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    volumes:
      - ./jellyseerr:/app/config
      - ${HOMEDIR}:/homedir
      - ${WD8TB}:/shares
    # ports:
    #   - 5055:5055
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.jellyseerr.entrypoints=websecure
      - traefik.http.routers.jellyseerr.rule=Host(`js.${DOMAIN}`)
      - traefik.http.routers.jellyseerr.tls=true
      - traefik.http.routers.jellyseerr.service=jellyseerr
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
      - glance.name=Jellyseerr
      - glance.url=https://js.${DOMAIN}
      - glance.icon=di:jellyseerr
      - glance.description=Add Movies and TV Shows to auatomation

  calibre:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./calibre/config:/config
      - ${SSD}/library:/books
    ports:
      - 8083:8083
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.calibre.entrypoints=websecure
      - traefik.http.routers.calibre.rule=Host(`calibre.${DOMAIN}`)
      - traefik.http.routers.calibre.tls=true
      - traefik.http.routers.calibre.service=calibre
      - traefik.http.services.calibre.loadbalancer.server.port=8083
      - glance.name=Calibre
      - glance.url=https://calibre.${DOMAIN}
      - glance.icon=di:calibre
      - glance.description=Ebooks

  pinchflat:
    image: ghcr.io/kieraneglin/pinchflat:latest
    container_name: pinchflat
    user: '1000:100'
    environment:
      - TZ=${TZ}
    # ports:
    #   - 8945:8945
    volumes:
      - ./pinchflat:/config
      - ${SSD}/Videos/youtube:/downloads
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.pinchflat.entrypoints=websecure
      - traefik.http.routers.pinchflat.rule=Host(`pinchflat.${DOMAIN}`)
      - traefik.http.routers.pinchflat.tls=true
      - traefik.http.routers.pinchflat.service=pinchflat
      - traefik.http.services.pinchflat.loadbalancer.server.port=8945
      - glance.name=Pinchflat
      - glance.url=https://pinchflat.${DOMAIN}
      - glance.icon=di:youtube
      - glance.description=Youtube Downloads

  beszel:
    image: henrygd/beszel
    container_name: beszel
    # ports:
    #   - 8090:8090
    volumes:
      - ./beszel_data:/beszel_data
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - revproxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=revproxy
      - traefik.http.routers.beszel.entrypoints=websecure
      - traefik.http.routers.beszel.rule=Host(`beszel.${DOMAIN}`)
      - traefik.http.routers.beszel.tls=true
      - traefik.http.routers.beszel.service=beszel
      - traefik.http.services.beszel.loadbalancer.server.port=8090
      - glance.name=Beszel
      - glance.url=https://beszel.${DOMAIN}/system/omv
      - glance.icon=di:beszel
      - glance.description=System Monitor
      - glance.id=beszel

  beszel-agent:
    image: henrygd/beszel-agent:latest
    container_name: beszel-agent
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      PORT: 45876
      # Do not remove quotes around the key
      KEY: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIrQQywcTALbSrVTG9NcHmQTlufiSQ5RX/0l6/OYs9ur'
    restart: unless-stopped
    labels:
      - glance.name=agent
      - glance.parent=beszel
